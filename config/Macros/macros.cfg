[gcode_macro CANCEL_PRINT]
description: mets fin à l'impression
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    END_PRINT
    BASE_CANCEL_PRINT

[force_move]
enable_force_move: True
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.


[gcode_macro CHANGE_FILAMENT]
description: Mets en pause l'impression, déplace l'outil en position de park, puis retracte le filament
gcode:
    {% set TEMP = params.TEMP|default(210)|float %}

 	SAVE_GCODE_STATE NAME=CHANGE_FILAMENT_state
    PAUSE
    PARK
    UNLOAD_FILAMENT
    RESTORE_GCODE_STATE NAME=CHANGE_FILAMENT_state


[gcode_macro UNLOAD_FILAMENT]
description: rétractation basique du filament (utilisé avec M600/CHANGE_FILAMENT)
gcode:
    {% set TEMP = params.TEMP|default(210)|float %}
    {% set DISTANCE = params.DISTANCE|default(105)|float %}

	SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state
	_LOW_TEMP_CHECK T={TEMP}

    _TIP_SHAPING
    M83
    G1 E-20 F3600
    G4 P3000
    G1 E{DISTANCE|float * -1} F3000

	RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state


[gcode_macro LOAD_FILAMENT]
description: chargement basique du filament (utilisé avec M600/CHANGE_FILAMENT)
gcode:
    {% set TEMP = params.TEMP|default(210)|float %}
    {% set DISTANCE = params.DISTANCE|default(105)|float %}

	SAVE_GCODE_STATE NAME=LOAD_FILAMENT_state
	_LOW_TEMP_CHECK T={TEMP}
    M83
	G92 E0
    G1 E{DISTANCE|float} F200
    G1 E50 F150
    
	G92 E0
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state


[gcode_macro PARK]
description: Met l'outil en position de parc et rétracte le filament si la buse est suffisamment chaude
gcode:
    {% set E = params.E|default(1.7)|float %}

    {% set Px = 305 %}
    {% set Py = -5 %}
    {% set park_lift_z = 50 %}

    {% set St = 300 * 60 %}
    {% set Sz = 50 * 60 %}

    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}

    {% set z_safe = act_z + park_lift_z %}
    {% if z_safe > max_z %}
        {% set z_safe = max_z %}
    {% endif %}

    # retract filament before move up toolhead
    {% if printer.extruder.temperature > 185 %}
        G10
    {% endif %}
    G90
    G1 Z{z_safe} F{Sz}

    G0 X{Px} Y{Py} F{St}

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S190                                                                            ; set hotend 190
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro _LOW_TEMP_CHECK]
description: Check the nozzle is at temperature and heat it if needed
gcode: 
    {% set T = params.T|default(210)|float %}

    {% if printer.extruder.target != 0 %}
        {% if printer.extruder.temperature < printer.extruder.target %}
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %}
        {% if printer.extruder.target < T %}
            M109 S{T}
        {% endif %}
    {% endif %}

[firmware_retraction]
# G10 to retract and G11 to unrectract
retract_length: 0.4
# unretract_extra_length: 0
retract_speed: 30
unretract_speed: 30
    
[gcode_macro START_PRINT]
gcode:
    #Get Bed and Extruder temperature from Slicer GCode
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(195)|float %}
    {% set SLICER = params.SLICER|default('superslicer')%}
    
    {% set force_z_tilte = printer["gcode_macro _G34_ACTIF"].g34 %}
    #Preheat nozzle and bed
      
    M140 S{BED_TEMP} # Démarrage chauffage plateau
    M190 S{BED_TEMP} # Attendre température plateau avant de continuer
    #Réglages plateau
    G90
#   G28 # Origines des 3 axes #Est effectué avec G34 et G29

	{% if force_z_tilte %}
		G34 # Z_STEPPER_AUTO_ALIGN 
    {% endif %}
    
    G29 # Auto nivelage
    #Mise en position de la tête hors du plateau pour chauffe
    G1 X30 Y-5 F5000.0
    G1 Z0.1 F3000.0
    M109 S{EXTRUDER_TEMP} # Attendre température buse avant de continuer
    #Tracage ligne d'amorçage
    M117 # Purge extrudeur
    G92 E0 # RAZ extrudeur
    G1 Z1.0 F3000 # Remonte Z pour éviter collision avec plateau
    G1 X30 Y10 Z0.3 F5000.0 # Déplacement vers ligne de purge
    G1 X210 Y10 Z0.3 F1500.0 E15 # Extrusion première ligne
    G1 X210 Y10.3 Z0.3 F5000.0 # Décallage pour la seconde ligne
    G1 X30 Y10.3 Z0.3 F1500.0 E30 # Extrusion seconde ligne
    G92 E0 # RAZ extrudeur
    G1 Z1.0 F3000 # Remonte Z pour éviter collision avec plateau
    {% if SLICER != 'cura' %}
		M83
    {% endif %}

[gcode_macro END_PRINT]
gcode:

    G92 E0 ; prepare to retract
    G1 E-0.7 F3000; retract to avoid stringing
    G91 # Passage en position relative
    G1 Z1.0 F3000 # Remonte Z pour éviter collision avec pièce
    G90 # Passage en position absolue
    M104 S0 # Extinction buse
    M140 S0 # Extinction plateau
    G1 X0 Y300 F1000 # Déplacement du plateau vers l'avant
    M84 # Extinction des moteurs
    M106 S0 # Extinction des ventilateurs


